package controllers

import (
	"net/http"

	"github.com/labstack/echo/v4"
	"github.com/manicar2093/expenses_api/internal/auth"
	"github.com/manicar2093/expenses_api/pkg/apperrors"
)

type (
	LoginController struct {
		googleAuth auth.LoginableByToken
		group      *echo.Group
	}
	LoginToken struct {
		Token string `json:"token"`
	}
)

func NewLoginController(googleAuth auth.LoginableByToken, e *echo.Echo) *LoginController {
	controller := &LoginController{googleAuth: googleAuth, group: e.Group("/auth")}
	controller.register()
	return controller
}

func (c *LoginController) register() {
	c.group.POST("/login/google", c.loginWGoogle)
}

// @Summary     Creates a new session by token
// @Description Creates a new session by token
// @Tags        login google
// @Accept      json
// @Produce     json
// @Param       google_token body     string           true "Token generated by google oauth"
// @Success     201          {object} auth.LoginOutput "Access information"
// @Failure     500          "Something unidentified has occurred"
// @Router      /auth/login/google [post]
func (c *LoginController) loginWGoogle(ctx echo.Context) error {
	var token LoginToken
	if err := ctx.Bind(&token); err != nil {
		return apperrors.CreateResponseFromError(ctx, err)
	}
	loginRes, err := c.googleAuth.Login(ctx.Request().Context(), token.Token)
	if err != nil {
		return apperrors.CreateResponseFromError(ctx, err)
	}

	return ctx.JSON(http.StatusOK, loginRes)
}

{
    "swagger": "2.0",
    "info": {
        "title": "Expenses API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login/google": {
            "post": {
                "description": "Creates a new session by token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "login google"
                ],
                "summary": "Creates a new session by token",
                "parameters": [
                    {
                        "description": "Token generated by google oauth",
                        "name": "google_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access information",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginOutput"
                        }
                    },
                    "500": {
                        "description": "Something unidentified has occurred"
                    }
                }
            }
        },
        "/auth/refresh_token": {
            "put": {
                "description": "Creates a new access token by session token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "refresh token"
                ],
                "summary": "Creates a new access token by session token",
                "parameters": [
                    {
                        "description": "Session info",
                        "name": "session_refresh",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RefreshTokenInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access information",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginOutput"
                        }
                    },
                    "500": {
                        "description": "Something unidentified has occurred"
                    }
                }
            }
        },
        "/expenses": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a expense into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expenses"
                ],
                "summary": "Create an expense",
                "parameters": [
                    {
                        "description": "Expense to be created",
                        "name": "expense_to_create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenses.CreateExpenseInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense has been created",
                        "schema": {
                            "$ref": "#/definitions/entities.Expense"
                        }
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Something unidentified has occurred"
                    }
                }
            }
        },
        "/expenses/to_paid": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change a expense is_paid status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expenses"
                ],
                "summary": "Set expense to paid",
                "parameters": [
                    {
                        "description": "ID to change to is paid",
                        "name": "expense_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenses.SetExpenseToPaidInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/expenses/toggle_is_paid": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Toggle is paid status from an expense",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expenses"
                ],
                "summary": "Toggle is paid status from an expense",
                "parameters": [
                    {
                        "description": "ID to toggle is paid status",
                        "name": "expense_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenses.ToggleExpenseIsPaidInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/expenses.ToggleExpenseIsPaidOutput"
                        }
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/expenses/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates an expense data depending if it is recurrent or not",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "expenses"
                ],
                "summary": "Updates an expense",
                "parameters": [
                    {
                        "description": "ID to toggle is paid status",
                        "name": "expense_update_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/expenses.UpdateExpenseInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expense was updated"
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/health_check": {
            "get": {
                "description": "It does a ping to db and returns service version",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healt check"
                ],
                "summary": "Checks service health",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/controllers.HealthCheckOutput"
                        }
                    },
                    "424": {
                        "description": "Failed Dependency",
                        "schema": {
                            "$ref": "#/definitions/controllers.HealthCheckOutput"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/incomes": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a income into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "incomes"
                ],
                "summary": "Create an income",
                "parameters": [
                    {
                        "description": "Income to be created",
                        "name": "expense_to_create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/incomes.CreateIncomeInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Income has been created",
                        "schema": {
                            "$ref": "#/definitions/entities.Income"
                        }
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Something unidentified has occurred"
                    }
                }
            }
        },
        "/recurrent_expenses": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a recurrent expense into the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "recurrent expenses"
                ],
                "summary": "Create a recurrent expense",
                "parameters": [
                    {
                        "description": "Expense to be created",
                        "name": "expense_to_create",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entities.RecurrentExpense"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Expense has been created",
                        "schema": {
                            "$ref": "#/definitions/entities.RecurrentExpense"
                        }
                    },
                    "400": {
                        "description": "When a request does not fulfill need data",
                        "schema": {
                            "$ref": "#/definitions/validator.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Something unidentified has occurred"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginOutput": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_expires_at": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/auth.UserData"
                }
            }
        },
        "auth.RefreshTokenInput": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "userAgent": {
                    "type": "string"
                }
            }
        },
        "auth.UserData": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.HealthCheckOutput": {
            "type": "object",
            "properties": {
                "db_status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "entities.Expense": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/null.String"
                },
                "id": {
                    "type": "string"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "name": {
                    "$ref": "#/definitions/null.String"
                },
                "recurrent_expense": {
                    "$ref": "#/definitions/entities.RecurrentExpense"
                },
                "recurrent_expense_id": {
                    "$ref": "#/definitions/uuid.NullUUID"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entities.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.Income": {
            "type": "object",
            "required": [
                "name",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/goption.Optional-time_Time"
                },
                "user_id": {
                    "$ref": "#/definitions/goption.Optional-uuid_UUID"
                }
            }
        },
        "entities.RecurrentExpense": {
            "type": "object",
            "required": [
                "amount",
                "name",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "$ref": "#/definitions/null.String"
                },
                "expenses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Expense"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "periodicity": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entities.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.Session": {
            "type": "object",
            "properties": {
                "client_ip": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entities.User"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "$ref": "#/definitions/null.String"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "lastname": {
                    "$ref": "#/definitions/null.String"
                },
                "name": {
                    "$ref": "#/definitions/null.String"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Session"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "expenses.CreateExpenseInput": {
            "type": "object",
            "required": [
                "amount",
                "name"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "for_next_month": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "expenses.SetExpenseToPaidInput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "expenses.ToggleExpenseIsPaidInput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "expenses.ToggleExpenseIsPaidOutput": {
            "type": "object",
            "properties": {
                "current_is_paid_status": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "expenses.UpdateExpenseInput": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "goption.Optional-time_Time": {
            "type": "object"
        },
        "goption.Optional-uuid_UUID": {
            "type": "object"
        },
        "incomes.CreateIncomeInput": {
            "type": "object",
            "required": [
                "name",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/goption.Optional-time_Time"
                },
                "user_id": {
                    "$ref": "#/definitions/goption.Optional-uuid_UUID"
                }
            }
        },
        "null.String": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "uuid.NullUUID": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if UUID is not NULL",
                    "type": "boolean"
                }
            }
        },
        "validator.ValidationError": {
            "type": "object",
            "properties": {
                "errors": {}
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type \"Bearer\" and then your API Token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}
// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	context "context"

	expenses "github.com/manicar2093/expenses_api/internal/expenses"
	mock "github.com/stretchr/testify/mock"
)

// ExpenseUpdateable is an autogenerated mock type for the ExpenseUpdateable type
type ExpenseUpdateable struct {
	mock.Mock
}

type ExpenseUpdateable_Expecter struct {
	mock *mock.Mock
}

func (_m *ExpenseUpdateable) EXPECT() *ExpenseUpdateable_Expecter {
	return &ExpenseUpdateable_Expecter{mock: &_m.Mock}
}

// UpdateExpense provides a mock function with given fields: _a0, _a1
func (_m *ExpenseUpdateable) UpdateExpense(_a0 context.Context, _a1 *expenses.UpdateExpenseInput) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *expenses.UpdateExpenseInput) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ExpenseUpdateable_UpdateExpense_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateExpense'
type ExpenseUpdateable_UpdateExpense_Call struct {
	*mock.Call
}

// UpdateExpense is a helper method to define mock.On call
//  - _a0 context.Context
//  - _a1 *expenses.UpdateExpenseInput
func (_e *ExpenseUpdateable_Expecter) UpdateExpense(_a0 interface{}, _a1 interface{}) *ExpenseUpdateable_UpdateExpense_Call {
	return &ExpenseUpdateable_UpdateExpense_Call{Call: _e.mock.On("UpdateExpense", _a0, _a1)}
}

func (_c *ExpenseUpdateable_UpdateExpense_Call) Run(run func(_a0 context.Context, _a1 *expenses.UpdateExpenseInput)) *ExpenseUpdateable_UpdateExpense_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*expenses.UpdateExpenseInput))
	})
	return _c
}

func (_c *ExpenseUpdateable_UpdateExpense_Call) Return(_a0 error) *ExpenseUpdateable_UpdateExpense_Call {
	_c.Call.Return(_a0)
	return _c
}

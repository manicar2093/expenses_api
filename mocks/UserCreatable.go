// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	auth "github.com/manicar2093/expenses_api/internal/auth"
	mock "github.com/stretchr/testify/mock"
)

// UserCreatable is an autogenerated mock type for the UserCreatable type
type UserCreatable struct {
	mock.Mock
}

type UserCreatable_Expecter struct {
	mock *mock.Mock
}

func (_m *UserCreatable) EXPECT() *UserCreatable_Expecter {
	return &UserCreatable_Expecter{mock: &_m.Mock}
}

// CreateUser provides a mock function with given fields: user
func (_m *UserCreatable) CreateUser(user *auth.UserData) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(*auth.UserData) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UserCreatable_CreateUser_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateUser'
type UserCreatable_CreateUser_Call struct {
	*mock.Call
}

// CreateUser is a helper method to define mock.On call
//   - user *auth.UserData
func (_e *UserCreatable_Expecter) CreateUser(user interface{}) *UserCreatable_CreateUser_Call {
	return &UserCreatable_CreateUser_Call{Call: _e.mock.On("CreateUser", user)}
}

func (_c *UserCreatable_CreateUser_Call) Run(run func(user *auth.UserData)) *UserCreatable_CreateUser_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*auth.UserData))
	})
	return _c
}

func (_c *UserCreatable_CreateUser_Call) Return(_a0 error) *UserCreatable_CreateUser_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewUserCreatable interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserCreatable creates a new instance of UserCreatable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserCreatable(t mockConstructorTestingTNewUserCreatable) *UserCreatable {
	mock := &UserCreatable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

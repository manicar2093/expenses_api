// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	auth "github.com/manicar2093/expenses_api/internal/auth"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// TokenRefreshable is an autogenerated mock type for the TokenRefreshable type
type TokenRefreshable struct {
	mock.Mock
}

type TokenRefreshable_Expecter struct {
	mock *mock.Mock
}

func (_m *TokenRefreshable) EXPECT() *TokenRefreshable_Expecter {
	return &TokenRefreshable_Expecter{mock: &_m.Mock}
}

// RefreshToken provides a mock function with given fields: sessionID
func (_m *TokenRefreshable) RefreshToken(sessionID uuid.UUID) (*auth.LoginOutput, error) {
	ret := _m.Called(sessionID)

	var r0 *auth.LoginOutput
	if rf, ok := ret.Get(0).(func(uuid.UUID) *auth.LoginOutput); ok {
		r0 = rf(sessionID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.LoginOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(sessionID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TokenRefreshable_RefreshToken_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RefreshToken'
type TokenRefreshable_RefreshToken_Call struct {
	*mock.Call
}

// RefreshToken is a helper method to define mock.On call
//   - sessionID uuid.UUID
func (_e *TokenRefreshable_Expecter) RefreshToken(sessionID interface{}) *TokenRefreshable_RefreshToken_Call {
	return &TokenRefreshable_RefreshToken_Call{Call: _e.mock.On("RefreshToken", sessionID)}
}

func (_c *TokenRefreshable_RefreshToken_Call) Run(run func(sessionID uuid.UUID)) *TokenRefreshable_RefreshToken_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uuid.UUID))
	})
	return _c
}

func (_c *TokenRefreshable_RefreshToken_Call) Return(_a0 *auth.LoginOutput, _a1 error) *TokenRefreshable_RefreshToken_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewTokenRefreshable interface {
	mock.TestingT
	Cleanup(func())
}

// NewTokenRefreshable creates a new instance of TokenRefreshable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTokenRefreshable(t mockConstructorTestingTNewTokenRefreshable) *TokenRefreshable {
	mock := &TokenRefreshable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

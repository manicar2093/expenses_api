// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	auth "github.com/manicar2093/expenses_api/internal/auth"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// UserFindable is an autogenerated mock type for the UserFindable type
type UserFindable struct {
	mock.Mock
}

type UserFindable_Expecter struct {
	mock *mock.Mock
}

func (_m *UserFindable) EXPECT() *UserFindable_Expecter {
	return &UserFindable_Expecter{mock: &_m.Mock}
}

// FindUserByID provides a mock function with given fields: ctx, id
func (_m *UserFindable) FindUserByID(ctx context.Context, id uuid.UUID) (*auth.UserData, error) {
	ret := _m.Called(ctx, id)

	var r0 *auth.UserData
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) *auth.UserData); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.UserData)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UserFindable_FindUserByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FindUserByID'
type UserFindable_FindUserByID_Call struct {
	*mock.Call
}

// FindUserByID is a helper method to define mock.On call
//   - ctx context.Context
//   - id uuid.UUID
func (_e *UserFindable_Expecter) FindUserByID(ctx interface{}, id interface{}) *UserFindable_FindUserByID_Call {
	return &UserFindable_FindUserByID_Call{Call: _e.mock.On("FindUserByID", ctx, id)}
}

func (_c *UserFindable_FindUserByID_Call) Run(run func(ctx context.Context, id uuid.UUID)) *UserFindable_FindUserByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(uuid.UUID))
	})
	return _c
}

func (_c *UserFindable_FindUserByID_Call) Return(_a0 *auth.UserData, _a1 error) *UserFindable_FindUserByID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewUserFindable interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserFindable creates a new instance of UserFindable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserFindable(t mockConstructorTestingTNewUserFindable) *UserFindable {
	mock := &UserFindable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

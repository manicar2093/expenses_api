// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/manicar2093/expenses_api/internal/entities"
	mock "github.com/stretchr/testify/mock"
)

// RecurrentExpensesMonthlyCreatedRepo is an autogenerated mock type for the RecurrentExpensesMonthlyCreatedRepo type
type RecurrentExpensesMonthlyCreatedRepo struct {
	mock.Mock
}

type RecurrentExpensesMonthlyCreatedRepo_Expecter struct {
	mock *mock.Mock
}

func (_m *RecurrentExpensesMonthlyCreatedRepo) EXPECT() *RecurrentExpensesMonthlyCreatedRepo_Expecter {
	return &RecurrentExpensesMonthlyCreatedRepo_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: ctx, recurrentExpense
func (_m *RecurrentExpensesMonthlyCreatedRepo) Save(ctx context.Context, recurrentExpense *entities.RecurrentExpensesMonthlyCreated) {
	_m.Called(ctx, recurrentExpense)
}

// RecurrentExpensesMonthlyCreatedRepo_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type RecurrentExpensesMonthlyCreatedRepo_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//  - ctx context.Context
//  - recurrentExpense *entities.RecurrentExpensesMonthlyCreated
func (_e *RecurrentExpensesMonthlyCreatedRepo_Expecter) Save(ctx interface{}, recurrentExpense interface{}) *RecurrentExpensesMonthlyCreatedRepo_Save_Call {
	return &RecurrentExpensesMonthlyCreatedRepo_Save_Call{Call: _e.mock.On("Save", ctx, recurrentExpense)}
}

func (_c *RecurrentExpensesMonthlyCreatedRepo_Save_Call) Run(run func(ctx context.Context, recurrentExpense *entities.RecurrentExpensesMonthlyCreated)) *RecurrentExpensesMonthlyCreatedRepo_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entities.RecurrentExpensesMonthlyCreated))
	})
	return _c
}

func (_c *RecurrentExpensesMonthlyCreatedRepo_Save_Call) Return() *RecurrentExpensesMonthlyCreatedRepo_Save_Call {
	_c.Call.Return()
	return _c
}

// Code generated by mockery v2.10.2. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/manicar2093/expenses_api/internal/entities"
	mock "github.com/stretchr/testify/mock"
)

// IncomesRepository is an autogenerated mock type for the IncomesRepository type
type IncomesRepository struct {
	mock.Mock
}

type IncomesRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *IncomesRepository) EXPECT() *IncomesRepository_Expecter {
	return &IncomesRepository_Expecter{mock: &_m.Mock}
}

// Save provides a mock function with given fields: _a0, _a1
func (_m *IncomesRepository) Save(_a0 context.Context, _a1 *entities.Income) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entities.Income) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IncomesRepository_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type IncomesRepository_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
//  - _a0 context.Context
//  - _a1 *entities.Income
func (_e *IncomesRepository_Expecter) Save(_a0 interface{}, _a1 interface{}) *IncomesRepository_Save_Call {
	return &IncomesRepository_Save_Call{Call: _e.mock.On("Save", _a0, _a1)}
}

func (_c *IncomesRepository_Save_Call) Run(run func(_a0 context.Context, _a1 *entities.Income)) *IncomesRepository_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entities.Income))
	})
	return _c
}

func (_c *IncomesRepository_Save_Call) Return(_a0 error) *IncomesRepository_Save_Call {
	_c.Call.Return(_a0)
	return _c
}
